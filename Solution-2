### Challenge II: Deploy an ERC20 or ERC721 Token on the zkEVM Testnet

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

import "@openzeppelin/contracts@4.8.2/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts@4.8.2/access/Ownable.sol";
import "@openzeppelin/contracts@4.8.2/utils/Counters.sol";

contract Vivek0k is ERC721, Ownable {
    using Counters for Counters.Counter;

    Counters.Counter private _tokenIdCounter;

    constructor() ERC721("vivek0k", "vOk") {}

    function _baseURI() internal pure override returns (string memory) {
        return "https://avatars.githubusercontent.com/u/129407072";
    }

    function safeMint(address to) public onlyOwner {
        uint256 tokenId = _tokenIdCounter.current();
        _tokenIdCounter.increment();
        _safeMint(to, tokenId);
    }
}

# Contract - https://explorer.public.zkevm-test.net/address/0x779a2473c2F1ACA43fA7eAd3930Fd2cf2DE286BD
# Transaction - https://explorer.public.zkevm-test.net/tx/0xc57d1065f6921aad27326be51c0a566236916ee24b8feb3dfaedb6749ae45537
